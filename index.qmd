---
title: "Investment Strategy Analysis"
subtitle: "Monte Carlo Simulation of Multiplicative Investment Games"
format:
  html: 
    theme: cosmo
    toc: true
    toc-depth: 3
    number-sections: true
    code-fold: false
    embed-resources: true
  pdf: default
execute:
  echo: false
  eval: true
---

# Investment Strategy Analysis: Monte Carlo Simulation

::: {.callout-abstract}
## Executive Summary

This analysis examines two investment strategies using Monte Carlo simulation to understand the long-term behavior of multiplicative investment games. We investigate how expected value calculations can be misleading when applied to real-world investment scenarios with compounding effects.

**Key Finding**: Despite a positive 5% expected return, most simulations result in significant losses, demonstrating the critical importance of understanding risk distributions rather than relying solely on expected values.
:::

## The Investment Game

::: {.panel-tabset}

### Strategy 1: Full Investment

Consider an investment game where you start with $1,000. Each year, a coin is flipped:
- **Heads (50% probability)**: Your entire balance increases by 50%
- **Tails (50% probability)**: Your entire balance decreases by 40%

This process continues annually from age 25 to 55 (30 years).

**Risk Profile**: High volatility with potential for massive gains or significant losses.

### Strategy 2: Partial Investment

In this modified approach, you must invest exactly 50% of your current balance each year:
- **Heads (50% probability)**: Your invested amount increases by 50%
- **Tails (50% probability)**: Your invested amount decreases by 40%
- The remaining 50% of your balance remains untouched

**Risk Profile**: Lower volatility with capital preservation focus.

:::

## Analysis Framework

### Expected Value Analysis

Let's establish the mathematical foundation for our investment strategies by examining expected values across multiple time horizons:

```{r}
#| fig-cap: Comprehensive expected value analysis across multiple time horizons
#| echo: false

suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(ggplot2))

# Set seed for reproducibility
set.seed(123)

# Parameters
initial_balance <- 1000
prob_heads <- 0.5
prob_tails <- 0.5
gain_factor <- 1.5
loss_factor <- 0.6

# Single coin flip analysis
balance_heads <- initial_balance * gain_factor
balance_tails <- initial_balance * loss_factor
expected_value_1 <- prob_heads * balance_heads + prob_tails * balance_tails

# Multiple coin flips analysis (up to 10 years)
years <- 1:10
expected_values <- numeric(length(years))
geometric_means <- numeric(length(years))

for (i in 1:length(years)) {
  n <- years[i]
  # Expected value after n coin flips (multiplicative)
  expected_values[i] <- initial_balance * ((prob_heads * gain_factor + prob_tails * loss_factor)^n)
  
  # Geometric mean (more appropriate for multiplicative processes)
  geometric_means[i] <- initial_balance * ((gain_factor^prob_heads * loss_factor^prob_tails)^n)
}

# Create expected value comparison data
ev_data <- tibble(
  Years = years,
  Expected_Value = expected_values,
  Geometric_Mean = geometric_means,
  Initial_Balance = initial_balance
)

# Create simple, clear expected value comparison
ggplot(ev_data, aes(x = Years)) +
  # Simple lines
  geom_line(aes(y = Expected_Value), color = "blue", linewidth = 2) +
  geom_line(aes(y = Geometric_Mean), color = "red", linewidth = 2) +
  # Reference line
  geom_hline(yintercept = initial_balance, linetype = "dashed", color = "black", linewidth = 1) +
  # Simple points
  geom_point(aes(y = Expected_Value), color = "blue", size = 3) +
  geom_point(aes(y = Geometric_Mean), color = "red", size = 3) +
  # Clean scales
  scale_y_continuous(labels = scales::dollar_format()) +
  scale_x_continuous(breaks = 1:10) +
  labs(
    title = "Expected Value vs. Reality",
    subtitle = "Blue line shows misleading arithmetic mean, Red line shows realistic geometric mean",
    x = "Years",
    y = "Expected Balance ($)",
    caption = "Black dashed line: Initial $1,000 investment"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 11),
    axis.title = element_text(size = 11, face = "bold"),
    legend.position = "none"
  )

# Detailed expected value calculations
cat("=== EXPECTED VALUE ANALYSIS ===\n\n")

cat("Single Coin Flip Analysis:\n")
cat("• Initial balance: $", initial_balance, "\n")
cat("• Balance after heads (+50%): $", balance_heads, "\n")
cat("• Balance after tails (-40%): $", balance_tails, "\n")
cat("• Expected value (1 flip): $", round(expected_value_1, 2), "\n")
cat("• Expected return (1 flip): ", round((expected_value_1 - initial_balance) / initial_balance * 100, 1), "%\n\n")

cat("Multi-Year Expected Value Comparison:\n")
ev_comparison <- ev_data %>%
  mutate(
    Years = as.character(Years),
    Expected_Value_Formatted = paste0("$", format(round(Expected_Value, 0), big.mark = ",")),
    Geometric_Mean_Formatted = paste0("$", format(round(Geometric_Mean, 0), big.mark = ",")),
    Arithmetic_Return = paste0(round((Expected_Value - initial_balance) / initial_balance * 100, 1), "%"),
    Geometric_Return = paste0(round((Geometric_Mean - initial_balance) / initial_balance * 100, 1), "%")
  ) %>%
  select(Years, Expected_Value_Formatted, Geometric_Mean_Formatted, Arithmetic_Return, Geometric_Return) %>%
  rename(
    "Years" = Years,
    "Expected Value" = Expected_Value_Formatted,
    "Geometric Mean" = Geometric_Mean_Formatted,
    "Arithmetic Return" = Arithmetic_Return,
    "Geometric Return" = Geometric_Return
  )

knitr::kable(ev_comparison,
             caption = "Expected Value Analysis: Arithmetic vs. Geometric Mean Over Time",
             align = c("c", "r", "r", "r", "r"),
             format = "html")
```

::: {.callout-important}
## Key Insight: The Expected Value Paradox

**Counter-Intuitive Finding**: Despite positive expected value (+5% per flip), most simulations result in losses due to the multiplicative nature of compounding.

**Mathematical Explanation**:
- **Arithmetic Mean**: $1,050 after 1 year (5% expected return)
- **Geometric Mean**: $948 after 1 year (-5.2% expected return)
- **Reality**: The geometric mean better predicts long-term outcomes in multiplicative processes

**Why This Matters**: The arithmetic mean overestimates returns because it doesn't account for the compounding effect of losses.
:::

## Single Simulation Analysis

Let's examine what happens in a single 30-year simulation:

```{r}
#| fig-cap: Single 30-year simulation of Strategy 1

suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(ggplot2))

# Set seed for reproducibility
set.seed(456)

# Parameters for investment game
initial_balance <- 1000
start_age <- 25
end_age <- 55
n_years <- end_age - start_age

# Function to simulate investment game
simulate_investment_game <- function(initial, years) {
  balance <- initial
  path <- numeric(years + 1)
  path[1] <- initial
  
  for (i in 1:years) {
    coin_flip <- rbinom(1, 1, 0.5)
    if (coin_flip == 1) {
      balance <- balance * 1.5  # 50% gain
    } else {
      balance <- balance * 0.6  # 40% loss
    }
    path[i + 1] <- balance
  }
  
  return(path)
}

# Run single simulation
investment_path <- simulate_investment_game(initial_balance, n_years)

# Create data frame
investment_data <- tibble(
  age = start_age:end_age,
  balance = investment_path
)

# Create time series plot
ggplot(investment_data, aes(x = age, y = balance)) +
  geom_line(color = "darkgreen", linewidth = 1.2) +
  geom_point(color = "darkred", size = 2) +
  geom_hline(yintercept = initial_balance, color = "blue", linetype = "dashed", linewidth = 1) +
  labs(
    title = "Investment Strategy 1: Single Simulation Path",
    subtitle = "Age 25 to 55 (30 years of investing)",
    x = "Age",
    y = "Account Balance ($)",
    caption = "Heads: +50%, Tails: -40% | Blue line shows initial balance"
  ) +
  scale_y_continuous(labels = scales::dollar_format()) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12, color = "gray50")
  )

# Show final results
final_balance <- investment_data$balance[nrow(investment_data)]
total_return <- (final_balance - initial_balance) / initial_balance * 100

cat("\nSingle Simulation Results:\n")
cat("Initial balance (age 25): $", initial_balance, "\n")
cat("Final balance (age 55): $", round(final_balance, 2), "\n")
cat("Total return: ", round(total_return, 2), "%\n")
cat("Annualized return: ", round((final_balance/initial_balance)^(1/n_years) - 1, 4) * 100, "%\n")
```

## Monte Carlo Analysis: 100 Simulations

To understand the true risk profile, we run 100 simulations:

```{r}
#| fig-cap: Distribution of final balances from 100 simulations

suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(ggplot2))

# Set seed for reproducibility
set.seed(789)

# Parameters for investment game
initial_balance <- 1000
start_age <- 25
end_age <- 55
n_years <- end_age - start_age
n_sims <- 100

# Function to simulate final balance
simulate_final_balance <- function(initial, years) {
  balance <- initial
  for (i in 1:years) {
    coin_flip <- rbinom(1, 1, 0.5)
    if (coin_flip == 1) {
      balance <- balance * 1.5  # 50% gain
    } else {
      balance <- balance * 0.6  # 40% loss
    }
  }
  return(balance)
}

# Run 100 simulations
final_balances <- replicate(n_sims, simulate_final_balance(initial_balance, n_years))

# Create data frame
simulation_results <- tibble(
  sim_num = 1:n_sims,
  final_balance = final_balances
)

# Create histogram
ggplot(simulation_results, aes(x = final_balance)) +
  geom_histogram(bins = 20, fill = "steelblue", alpha = 0.8, color = "black") +
  geom_vline(xintercept = initial_balance, color = "red", linetype = "dashed", linewidth = 1) +
  geom_vline(xintercept = mean(final_balances), color = "green", linetype = "solid", linewidth = 1) +
  labs(
    title = "Distribution of Final Account Balances at Age 55",
    subtitle = "Strategy 1: 100 Simulations (30 years)",
    x = "Final Balance at Age 55 ($)",
    y = "Frequency",
    caption = "Red line: Initial balance ($1,000) | Green line: Mean final balance"
  ) +
  scale_x_continuous(labels = scales::dollar_format(), trans = "log10") +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12, color = "gray50")
  )

# Summary statistics
summary_stats <- simulation_results %>%
  summarise(
    mean_balance = mean(final_balance),
    median_balance = median(final_balance),
    min_balance = min(final_balance),
    max_balance = max(final_balance),
    prob_above_initial = mean(final_balance > initial_balance),
    prob_above_10000 = mean(final_balance > 10000)
  )

cat("\nStrategy 1 Summary Statistics:\n")
print(summary_stats)
```

## Probability Analysis

```{r}
#| fig-cap: Probability analysis for various balance thresholds

# Calculate probability that final balance > $1,000
prob_above_1000 <- mean(final_balances > 1000)

# Calculate additional probability thresholds
prob_above_5000 <- mean(final_balances > 5000)
prob_above_10000 <- mean(final_balances > 10000)
prob_above_50000 <- mean(final_balances > 50000)

# Create probability summary
probability_summary <- tibble(
  threshold = c("$1,000", "$5,000", "$10,000", "$50,000"),
  probability = c(prob_above_1000, prob_above_5000, prob_above_10000, prob_above_50000),
  percentage = c(prob_above_1000, prob_above_5000, prob_above_10000, prob_above_50000) * 100
)

cat("Strategy 1 Probability Analysis:\n")
cat("============================\n")
cat("Probability that final balance > $1,000: ", round(prob_above_1000, 3), " (", round(prob_above_1000 * 100, 1), "%)\n")
cat("Probability that final balance > $5,000: ", round(prob_above_5000, 3), " (", round(prob_above_5000 * 100, 1), "%)\n")
cat("Probability that final balance > $10,000: ", round(prob_above_10000, 3), " (", round(prob_above_10000 * 100, 1), "%)\n")
cat("Probability that final balance > $50,000: ", round(prob_above_50000, 3), " (", round(prob_above_50000 * 100, 1), "%)\n")

# Show the probability summary table
print(probability_summary)
```

## Strategy 2 Analysis: 50% Investment Distribution

Let's examine the distribution of Strategy 2 results separately:

```{r}
#| fig-cap: Distribution of Strategy 2 final balances (50% investment rule)
#| echo: false

suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(ggplot2))

# Set seed for reproducibility
set.seed(999)

# Parameters for Strategy 2
initial_balance <- 1000
start_age <- 25
end_age <- 55
n_years <- end_age - start_age
n_sims <- 100

# Function to simulate Strategy 2 (50% betting rule)
simulate_strategy_2 <- function(initial, years) {
  balance <- initial
  for (i in 1:years) {
    # Bet exactly 50% of current balance
    bet_amount <- balance * 0.5
    remaining_balance <- balance - bet_amount
    
    coin_flip <- rbinom(1, 1, 0.5)
    if (coin_flip == 1) {
      # Win: bet amount increases by 50%
      bet_result <- bet_amount * 1.5
    } else {
      # Lose: bet amount decreases by 40%
      bet_result <- bet_amount * 0.6
    }
    
    # New balance = remaining balance + bet result
    balance <- remaining_balance + bet_result
  }
  return(balance)
}

# Run 100 simulations for Strategy 2
strategy_2_balances <- replicate(n_sims, simulate_strategy_2(initial_balance, n_years))

# Create data frame for Strategy 2
strategy_2_results <- tibble(
  sim_num = 1:n_sims,
  final_balance = strategy_2_balances
)

# Create Strategy 2 histogram
ggplot(strategy_2_results, aes(x = final_balance)) +
  geom_histogram(bins = 15, fill = "orange", alpha = 0.8, color = "black") +
  geom_vline(xintercept = initial_balance, color = "red", linetype = "dashed", linewidth = 1) +
  geom_vline(xintercept = mean(strategy_2_balances), color = "darkorange", linetype = "solid", linewidth = 1) +
  labs(
    title = "Distribution of Final Balances: Strategy 2 (50% Investment)",
    subtitle = "100 Simulations - Conservative Approach",
    x = "Final Balance at Age 55 ($)",
    y = "Frequency",
    caption = "Red line: Initial balance ($1,000) | Orange line: Mean final balance"
  ) +
  scale_x_continuous(labels = scales::dollar_format()) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12, color = "gray50")
  )

# Summary statistics for Strategy 2
strategy_2_summary <- strategy_2_results %>%
  summarise(
    mean_balance = mean(final_balance),
    median_balance = median(final_balance),
    min_balance = min(final_balance),
    max_balance = max(final_balance),
    prob_above_initial = mean(final_balance > initial_balance),
    prob_above_10000 = mean(final_balance > 10000)
  )

# Create formatted table for Strategy 2
strategy_2_table <- strategy_2_summary %>%
  mutate(
    Mean_Balance = paste0("$", format(round(mean_balance, 0), big.mark = ",")),
    Median_Balance = paste0("$", format(round(median_balance, 0), big.mark = ",")),
    Min_Balance = paste0("$", format(round(min_balance, 1), big.mark = ",")),
    Max_Balance = paste0("$", format(round(max_balance, 0), big.mark = ",")),
    Prob_Above_Initial = paste0(round(prob_above_initial * 100, 0), "%"),
    Prob_Above_10000 = paste0(round(prob_above_10000 * 100, 0), "%")
  ) %>%
  select(Mean_Balance, Median_Balance, Min_Balance, Max_Balance, Prob_Above_Initial, Prob_Above_10000) %>%
  rename(
    "Mean Balance" = Mean_Balance,
    "Median Balance" = Median_Balance,
    "Minimum Balance" = Min_Balance,
    "Maximum Balance" = Max_Balance,
    "Chance > $1,000" = Prob_Above_Initial,
    "Chance > $10,000" = Prob_Above_10000
  )

knitr::kable(strategy_2_table,
             caption = "Strategy 2 Summary Statistics (50% Investment Rule)",
             align = c("r", "r", "r", "r", "r", "r"),
             format = "html")
```

## Strategy Comparison: Side-by-Side Analysis

Now let's analyze Strategy 2 (50% betting rule):

```{r}
#| fig-cap: Comparison of Strategy 1 vs Strategy 2

suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(ggplot2))

# Set seed for reproducibility
set.seed(999)

# Parameters for modified investment game
initial_balance <- 1000
start_age <- 25
end_age <- 55
n_years <- end_age - start_age
n_sims <- 100

# Function to simulate modified strategy (50% betting rule)
simulate_modified_strategy <- function(initial, years) {
  balance <- initial
  for (i in 1:years) {
    # Bet exactly 50% of current balance
    bet_amount <- balance * 0.5
    remaining_balance <- balance - bet_amount
    
    coin_flip <- rbinom(1, 1, 0.5)
    if (coin_flip == 1) {
      # Win: bet amount increases by 50%
      bet_result <- bet_amount * 1.5
    } else {
      # Lose: bet amount decreases by 40%
      bet_result <- bet_amount * 0.6
    }
    
    # New balance = remaining balance + bet result
    balance <- remaining_balance + bet_result
  }
  return(balance)
}

# Run 100 simulations for modified strategy
modified_final_balances <- replicate(n_sims, simulate_modified_strategy(initial_balance, n_years))

# Create comparison data frame
strategy_comparison <- tibble(
  sim_num = 1:n_sims,
  strategy_1 = final_balances,
  strategy_2 = modified_final_balances
)

# Calculate probabilities for modified strategy
prob_modified_above_1000 <- mean(modified_final_balances > 1000)
prob_modified_above_10000 <- mean(modified_final_balances > 10000)

# Calculate probabilities for original strategy (from previous analysis)
prob_original_above_1000 <- mean(final_balances > 1000)
prob_original_above_10000 <- mean(final_balances > 10000)

# Create comparison plot
comparison_data <- strategy_comparison %>%
  pivot_longer(cols = c(strategy_1, strategy_2), 
               names_to = "strategy", values_to = "final_balance") %>%
  mutate(strategy = case_when(
    strategy == "strategy_1" ~ "Strategy 1: Full Investment",
    strategy == "strategy_2" ~ "Strategy 2: 50% Investment"
  ))

ggplot(comparison_data, aes(x = final_balance, fill = strategy)) +
  geom_histogram(alpha = 0.7, bins = 20, position = "identity") +
  geom_vline(xintercept = 10000, color = "red", linetype = "dashed", linewidth = 1) +
  labs(
    title = "Strategy Comparison: Final Balance Distributions",
    subtitle = "100 Simulations Each (30 years)",
    x = "Final Balance at Age 55 ($)",
    y = "Frequency",
    fill = "Strategy",
    caption = "Red line shows $10,000 threshold"
  ) +
  scale_x_continuous(labels = scales::dollar_format(), trans = "log10") +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12, color = "gray50"),
    legend.position = "bottom"
  )

# Summary statistics comparison
comparison_summary <- tibble(
  Strategy = c("Strategy 1: Full Investment", "Strategy 2: 50% Investment"),
  Mean_Balance = c(mean(final_balances), mean(modified_final_balances)),
  Median_Balance = c(median(final_balances), median(modified_final_balances)),
  Prob_Above_1000 = c(prob_original_above_1000, prob_modified_above_1000),
  Prob_Above_10000 = c(prob_original_above_10000, prob_modified_above_10000)
)

# Create a professional summary table
professional_summary <- comparison_summary %>%
  mutate(
    Strategy = case_when(
      Strategy == "Strategy 1: Full Investment" ~ "Strategy 1: Full Investment",
      Strategy == "Strategy 2: 50% Investment" ~ "Strategy 2: 50% Investment"
    ),
    Mean_Balance = paste0("$", format(round(Mean_Balance, 0), big.mark = ",")),
    Median_Balance = paste0("$", format(round(Median_Balance, 0), big.mark = ",")),
    Prob_Above_1000 = paste0(round(Prob_Above_1000 * 100, 0), "%"),
    Prob_Above_10000 = paste0(round(Prob_Above_10000 * 100, 0), "%")
  ) %>%
  rename(
    "Investment Strategy" = Strategy,
    "Average Final Balance" = Mean_Balance,
    "Median Final Balance" = Median_Balance,
    "Chance > $1,000" = Prob_Above_1000,
    "Chance > $10,000" = Prob_Above_10000
  )

# Display the professional table
knitr::kable(professional_summary, 
             caption = "Strategy Comparison: Final Results",
             align = c("l", "r", "r", "r", "r"),
             format = "html")

```

::: {.callout-tip}
## 🎯 Key Comparison Insights

**Capital Preservation**: Strategy 2 is safer (39% vs 30% chance of keeping your $1,000)

**Growth Potential**: Strategy 1 offers higher rewards (2% vs 0% chance of reaching $10,000)

**Risk vs Reward**: Full investment is riskier but has potential for massive gains

**Conservative Approach**: 50% investment strategy prioritizes capital preservation over growth

**Strategic Trade-off**: Choose Strategy 1 for maximum upside potential, Strategy 2 for capital protection
:::

## Risk-Return Analysis

Let's create a comprehensive risk-return visualization:

```{r}
#| fig-cap: Enhanced Risk-Return Analysis with confidence intervals and distribution comparison
#| echo: false

suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(ggplot2))

# Combine all simulation data for risk-return analysis
combined_data <- tibble(
  strategy = rep(c("Strategy 1: Full Investment", "Strategy 2: 50% Investment"), each = 100),
  final_balance = c(final_balances, strategy_2_balances),
  log_return = log(c(final_balances, strategy_2_balances) / 1000)
) %>%
  group_by(strategy) %>%
  mutate(
    risk = sd(final_balance),
    return = mean(final_balance)
  )

# Create enhanced risk-return scatter plot with confidence intervals
risk_return_summary <- combined_data %>%
  group_by(strategy) %>%
  summarise(
    mean_return = mean(final_balance),
    risk = sd(final_balance),
    min_return = min(final_balance),
    max_return = max(final_balance),
    q25 = quantile(final_balance, 0.25),
    q75 = quantile(final_balance, 0.75),
    n = n()
  )

# Create enhanced risk-return plot
ggplot(risk_return_summary, aes(x = risk, y = mean_return, color = strategy)) +
  # Add confidence ellipses to show risk range
  geom_point(size = 5, alpha = 0.8) +
  # Add error bars for risk range
  geom_errorbar(aes(ymin = q25, ymax = q75), width = 0.1, size = 1.2, alpha = 0.7) +
  # Add strategy labels
  geom_text(aes(label = case_when(
    strategy == "Strategy 1: Full Investment" ~ "High Risk\nHigh Return",
    strategy == "Strategy 2: 50% Investment" ~ "Low Risk\nLow Return"
  )), 
  hjust = -0.1, vjust = 0.5, size = 3.5, fontface = "bold") +
  # Add risk-return efficiency line
  geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "gray50", alpha = 0.5) +
  # Add quadrant labels
  annotate("text", x = max(risk_return_summary$risk) * 0.7, 
           y = max(risk_return_summary$mean_return) * 0.9, 
           label = "High Risk\nHigh Return\nZone", 
           size = 3, color = "gray40", fontface = "italic") +
  annotate("text", x = min(risk_return_summary$risk) * 1.1, 
           y = min(risk_return_summary$mean_return) * 1.1, 
           label = "Low Risk\nLow Return\nZone", 
           size = 3, color = "gray40", fontface = "italic") +
  labs(
    title = "Risk-Return Analysis: Investment Strategy Comparison",
    subtitle = "Higher risk strategies offer higher potential returns but with greater uncertainty",
    x = "Risk (Standard Deviation of Final Balances)",
    y = "Average Return (Mean Final Balance)",
    caption = "Error bars show 25th-75th percentile range | Each strategy based on 100 simulations"
  ) +
  scale_x_continuous(labels = scales::dollar_format(), 
                     breaks = scales::pretty_breaks(n = 6)) +
  scale_y_continuous(labels = scales::dollar_format(),
                     breaks = scales::pretty_breaks(n = 6)) +
  scale_color_manual(values = c("Strategy 1: Full Investment" = "#2E86AB", 
                               "Strategy 2: 50% Investment" = "#F24236")) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16, face = "bold", color = "#2C3E50"),
    plot.subtitle = element_text(size = 12, color = "gray50"),
    axis.title = element_text(size = 11, face = "bold"),
    axis.text = element_text(size = 10),
    legend.position = "none",
    panel.grid.major = element_line(color = "gray90", size = 0.5),
    panel.grid.minor = element_line(color = "gray95", size = 0.3),
    plot.background = element_rect(fill = "white", color = NA),
    panel.background = element_rect(fill = "white", color = NA)
  )

# Create additional risk-return visualization: Box plots
ggplot(combined_data, aes(x = strategy, y = final_balance, fill = strategy)) +
  geom_boxplot(alpha = 0.7, outlier.shape = 21, outlier.fill = "white", outlier.color = "black") +
  geom_jitter(width = 0.2, alpha = 0.4, size = 0.8) +
  scale_y_continuous(labels = scales::dollar_format(), 
                     trans = "log10",
                     breaks = c(100, 1000, 10000, 100000, 1000000)) +
  scale_fill_manual(values = c("Strategy 1: Full Investment" = "#2E86AB", 
                              "Strategy 2: 50% Investment" = "#F24236")) +
  labs(
    title = "Distribution Comparison: Log Scale View",
    subtitle = "Shows the extreme range differences between strategies",
    x = "Investment Strategy",
    y = "Final Balance (Log Scale)",
    caption = "Each dot represents one simulation | Box shows 25th-75th percentile range"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold", color = "#2C3E50"),
    plot.subtitle = element_text(size = 12, color = "gray50"),
    axis.title = element_text(size = 11, face = "bold"),
    axis.text = element_text(size = 10),
    legend.position = "none",
    panel.grid.major.y = element_line(color = "gray90", size = 0.5),
    panel.grid.minor.y = element_line(color = "gray95", size = 0.3)
  )

# Create formatted risk-return table
risk_return_table <- risk_return_summary %>%
  mutate(
    Strategy = case_when(
      strategy == "Strategy 1: Full Investment" ~ "Strategy 1: Full Investment",
      strategy == "Strategy 2: 50% Investment" ~ "Strategy 2: 50% Investment"
    ),
    Mean_Return = paste0("$", format(round(mean_return, 0), big.mark = ",")),
    Risk = paste0("$", format(round(risk, 0), big.mark = ",")),
    Min_Return = paste0("$", format(round(min_return, 1), big.mark = ",")),
    Max_Return = paste0("$", format(round(max_return, 0), big.mark = ",")),
    Risk_Return_Ratio = paste0(round(risk / mean_return, 2))
  ) %>%
  select(Strategy, Mean_Return, Risk, Min_Return, Max_Return, Risk_Return_Ratio) %>%
  rename(
    "Investment Strategy" = Strategy,
    "Mean Return" = Mean_Return,
    "Risk (Std Dev)" = Risk,
    "Minimum Return" = Min_Return,
    "Maximum Return" = Max_Return,
    "Risk/Return Ratio" = Risk_Return_Ratio
  )

knitr::kable(risk_return_table,
             caption = "Risk-Return Analysis Summary",
             align = c("l", "r", "r", "r", "r", "r"),
             format = "html")
```

## Key Findings

::: {.callout-warning}
## Risk-Return Analysis

1. **Expected Value Misleading**: Despite a positive 5% expected return, most simulations result in losses below the initial investment.

2. **Extreme Volatility**: Final balances range from near zero to potentially millions, demonstrating the high-risk nature of multiplicative investment strategies.

3. **Strategy Comparison**: The 50% investment strategy (Strategy 2) shows different risk-return characteristics compared to full investment (Strategy 1).
:::

::: {.callout-note}
## Probability Results

- **Strategy 1 (Full Investment)**:
  - Probability of ending above $1,000: **30%**
  - Probability of ending above $10,000: **2%**

- **Strategy 2 (50% Investment)**:
  - Probability of ending above $1,000: **39%**
  - Probability of ending above $10,000: **0%**

**Key Insight**: Strategy 2 is safer for preserving capital but offers no chance of high returns.
:::

### Strategic Implications

This analysis demonstrates several critical concepts:

1. **Expected Value vs. Reality**: Positive expected value doesn't guarantee positive outcomes in multiplicative processes
2. **Compounding Effects**: Early losses have devastating long-term impacts due to the multiplicative nature
3. **Risk Management**: Position sizing and diversification are crucial for managing investment risk
4. **Simulation Power**: Monte Carlo methods reveal the true distribution of possible outcomes

::: {.callout-tip}
## Conclusion

This Monte Carlo analysis reveals the counter-intuitive nature of multiplicative investment processes. While theoretical expected value calculations suggest positive returns, the reality of compounding effects leads to extreme outcomes with high downside risk. Understanding these dynamics is essential for making informed investment decisions and implementing appropriate risk management strategies.

The comparison between full investment and partial investment strategies demonstrates how position sizing can significantly impact risk-return profiles, highlighting the importance of strategic portfolio management in real-world investment scenarios.

**Key Takeaway**: Expected value alone is insufficient for investment decisions - understanding the full distribution of outcomes is crucial for risk management.

### Strategic Recommendations

1. **For Conservative Investors**: Choose Strategy 2 for better capital preservation
2. **For Risk-Tolerant Investors**: Strategy 1 offers higher potential rewards
3. **For All Investors**: Always analyze the full distribution of outcomes, not just expected values
4. **Portfolio Management**: Consider position sizing and diversification strategies
:::